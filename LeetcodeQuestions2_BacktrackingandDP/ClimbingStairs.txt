class Solution {
    public int climbStairs(int n) {
       int dp[] = new int[n + 1];
    //    return helper(n , dp);
        // dp[0] = 1;
        // dp[1] = 1;
        // for (int i = 2; i <= n; i++) {
        //     dp[i] = dp[i - 1] + dp[i - 2];
        // }

        // return dp[n];
        if(n < 2)return 1;
        int first = 1;
        int second = 1;
        int result = 0;
        for(int i = 2;i<=n;i++){
            result = first + second;
            first = second;
            second = result;
        }

        return result;
    }

    // int helper(int n , int dp[]){
    //      if (n < 2) {
    //         return 1;
    //     }
    //     if(dp[n] != 0){
    //         return dp[n];
    //     }
    //     dp[n] =  helper(n - 1 , dp) + helper(n - 2 , dp);
    //     return dp[n];
    // }
}