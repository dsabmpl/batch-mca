class Solution {
    public int rob(int[] nums) {
        int n = nums.length;
        if(n == 1)return nums[0];
        Integer  dp[] = new Integer[n];
        Integer  dp1[] = new Integer[n];
        return Math.max(robHelper(nums , 0 , n - 2, dp) , robHelper(nums , 1 , n - 1 , dp1));
    }

    public static int robHelper(int[] nums , int index , int end  , Integer dp[]){
        if(index > end)return 0;

        if(dp[index ] != null){
            return dp[index];
        }

        int include = nums[index] +  robHelper(nums , index + 2 ,end  ,  dp);
        int exclude = robHelper(nums , index + 1 , end , dp);
        dp[index] =  Math.max(include , exclude);
        return dp[index];
    }
}