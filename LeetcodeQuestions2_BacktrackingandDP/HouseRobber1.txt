class Solution {
    public int rob(int[] nums) {
        if(nums.length == 1)return nums[0];
        Integer[] dp = new Integer[nums.length];
        // return helper(nums , 0 , dp);
        return tabulation(nums , dp);
    }

    public int helper(int[] nums , int index , Integer[] dp){
        if(index >= nums.length)return 0;
        if(dp[index] != null)return dp[index];
        int include = nums[index] +  helper(nums , index + 2 , dp);
        int exclude = helper(nums , index + 1 , dp);
        dp[index] =  Math.max(include , exclude);
        return dp[index];

    }

    public int tabulation(int nums[] , Integer dp[]){
        dp[0] = nums[0];
        dp[1] = Math.max(nums[0] , nums[1]);
        for(int i = 2;i<nums.length;i++){
            dp[i] = Math.max(nums[i] + dp[i - 2] , dp[i - 1]);
        }

        return dp[nums.length - 1];
    }
}