class Solution {
    public int uniquePaths(int m, int n) {
        Integer dp[][] = new Integer[m][n];
        // return helper(0 , 0 , m - 1 , n - 1 , dp);
        for(int i = 0;i<m;i++){
            dp[i][0] = 1;
        }

        for(int i = 0;i<n;i++){
            dp[0][i] = 1;
        }

        for(int i = 1;i<m;i++){
            for(int j = 1;j<n;j++){
                dp[i][j] = dp[i][j - 1] + dp[i - 1][j];
            }
        }

        return dp[m - 1][n - 1];
    }

    public int helper(int row , int col , int m , int n ,Integer dp[][] ){
        if(row == m && col == n){
            return 1;
        }

        if(row > m || col > n)return 0;
        if(dp[row][col] != null)return dp[row][col];

        dp[row][col] = helper(row + 1 , col , m , n , dp) + helper(row , col + 1 , m , n , dp);
        return dp[row][col];
    }
}